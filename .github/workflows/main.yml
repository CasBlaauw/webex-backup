name: Package Application with Pyinstaller

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: pyinstaller -F -n webex-archive-mac webex-archive.py && cd dist/ && zip -r9 webex-archive-mac.zip webex-archive/
            OUT_FILE_NAME: webex-archive.zip
            ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller -F -n webex-archive-windows webex-archive.py
            OUT_FILE_NAME: webex-archive.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}

    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: False
        title: "Current version"
        files: |
          webex-archive-windows.exe
          webex-archive-mac.zip
          
          
  
